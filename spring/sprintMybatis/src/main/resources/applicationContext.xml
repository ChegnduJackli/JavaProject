<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-2.5.xsd"
>
    <!-- 指定需要扫描的包（包括子包），使注解生效 -->
    <context:component-scan base-package="jack.ckDao" />
    <context:component-scan base-package="jack.ckControler" />
    <!-- 加载properties文件 -->
    <context:property-placeholder location="classpath:db.properties" />

<!--    https://stackoverflow.com/questions/3700720/cannot-find-class-org-springframework-jdbc-datasource-drivermanagerdatasourc-->
    <!-- 配置数据源，读取properties文件信息 ,这儿跟教程不一样，是个坑-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClass}" />
        <property name="url" value="${jdbc.jdbcUrl}" />
        <property name="username" value="${jdbc.user}" />
        <property name="password" value="${jdbc.password}" />

    </bean>

    <!-- 添加事务支持 -->
    <bean id="txManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <!-- 注册事务管理驱动 -->
    <tx:annotation-driven transaction-manager="txManager" />

    <!--配置sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--指定Mybatis全局配置文件-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--指定数据源-->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">

        <!-- mybatis-spring组件的扫描器，com.dao只需要接口（接口方法与SQL映射文件中的相同） -->
        <property name="basePackage" value="jack.ckDao" />

        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />

    </bean>

<!--    <bean id="studentMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">-->

<!--        &lt;!&ndash;指定要映射的mapper接口的全限定名&ndash;&gt;-->
<!--        <property name="mapperInterface" value="ckDao.IStudentDao"/>-->
<!--        &lt;!&ndash;指定sqlSessionFactory&ndash;&gt;-->
<!--        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>-->
<!--    </bean>-->
</beans>